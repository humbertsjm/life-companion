[tool.mypy]
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "hub.prod_settings"

[tool.ruff]
exclude = [
    ".direnv",
    ".git",
    ".git-rewrite",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "fixtures",
    "hub/base_settings.py",
    "hub/prod_settings.py",
    "hub/dev_settings.py",
    "catalog_app/templates",
    "catalog_app/migrations",
    "main_app/templates",
    "main_app/migrations",
    "dev.py",
    "manage.py",
    "__init__.py"
]
line-length = 100
indent-width = 4
target-version = "py313"

[tool.ruff.lint]
ignore = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D203",
    "D213",
    "Q000",
    "ANN002",
    "ANN003",
    #"ISC001",
]
select = [
    "ANN", # flake8-annotations
    "ARG", # flake8-arguments
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "C90", # mccabe complexity
    "D",   # pydocstyle
    "DJ",  # flake8-django
    "DTZ", # flake8-datetimez
    "E",   # pycodestyle
    "EM",  # flake8-errmsg
    "F",   # flake8
    "G",   # flake8-logging-format
    "I",   # isort
    "ISC", # flake8-implicit-str-concat
    "LOG", # flake8-logging
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RUF", # ruff-specific rules
    "Q",   # flake8-quotes
    "SIM", # flake8-simplify
    "T10", # flake8-print
    "TCH", # flake8-type-checking
    "TRY", # tryceratops
    "UP",  # pyupgrade
]
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
#dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "single" # FIXME
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"